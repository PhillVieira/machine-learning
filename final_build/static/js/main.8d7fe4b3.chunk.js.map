{"version":3,"sources":["components/icons-svg/style.ts","components/icons-svg/icons.tsx","components/header/style.ts","components/header/header.tsx","components/feature/styles.ts","components/feature/index.tsx","components/image-selector/style.js","components/image-selector/image-selector.js","components/timer/timer.tsx","components/content/style.ts","components/content/content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconWrapper","styled","div","IconSvg","color","xmlns","version","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","this","props","icon","exitIcon","React","HeaderWrapper","Bar","GroupButtons","NavButton","button","useMinWidth","Header","ipcRenderer","initializeIpcRenderer","window","process","require","Error","setState","state","on","event","args","console","log","loading","openTrainingMode","send","exitApp","onClick","disabled","Container","Content","Wrapper","Subtitle","h2","h4","List","ListItem","Feature","data","loadingData","useState","characteristics","setCharacteristics","accuracy","label","predictionResult","setPredictionResult","useEffect","parsedCharacteristics","Object","keys","features","map","el","name","value","length","prediction","slice","item","index","key","toPrecision","style","marginTop","paddingTop","borderTop","toFixed","ImageWrapper","aside","ThumbsContainer","Thumb","ThumbInner","ImgStyle","img","ImageSelector","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","changeImage","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","src","forEach","revokeObjectURL","className","TimerLoading","done","display","textAlign","formatValue","start","stop","Hours","Minutes","Seconds","ContentWrapper","ColumnContent","LeftContent","RightContent","Btn","DisableBtn","MessageInfo","p","ImageMatrix","confusionMatrix","timer","Date","now","isJson","jsonData","JSON","parse","uri","json","loadingClassify","handleImage","image","classifyAction","path","str","error","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8d7fe4b3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const IconWrapper = styled.div`\r\n    display:block;\r\n    float:right;\r\n    padding-top:3px;        \r\n    margin-left:4px;\r\n`;\r\n","import * as React from 'react';\r\nimport { IconWrapper } from './style';\r\n\r\nexport interface IIconProps {\r\n  icon: string;\r\n  color?: string;\r\n}\r\n\r\nexport default class IconSvg extends React.Component<IIconProps> {\r\n  exitIcon(color: string) {\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        version=\"1.0\"\r\n        width=\"14px\"\r\n        height=\"14px\"\r\n        viewBox=\"0 0 1280.000000 1280.000000\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      >\r\n        <g\r\n          transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\r\n          fill={color}\r\n          stroke=\"none\"\r\n        >\r\n          <path d=\"M6080 11255 c-171 -35 -306 -109 -435 -239 -100 -101 -158 -193 -199 -316 -36 -108 -46 -186 -46 -357 l0 -153 2355 0 c1694 0 2369 -3 2407 -11 167 -35 301 -170 337 -337 16 -76 16 -6808 0 -6884 -36 -167 -171 -302 -337 -337 -38 -8 -713 -11 -2407 -11 l-2355 0 0 -152 c0 -172 10 -250 46 -358 41 -122 99 -214 199 -316 133 -134 278 -211 459 -243 41 -8 807 -11 2393 -11 2569 0 2395 -4 2563 61 107 41 192 100 290 199 126 127 201 275 229 450 15 91 15 8229 0 8320 -55 348 -329 629 -677 696 -106 20 -4721 19 -4822 -1z\" />\r\n          <path d=\"M5825 8954 c-44 -14 -78 -43 -289 -252 -266 -265 -286 -292 -286 -397 0 -37 8 -76 19 -101 13 -28 204 -227 646 -670 l628 -629 -2574 -5 -2574 -5 -41 -22 c-56 -30 -119 -103 -133 -155 -9 -31 -11 -143 -9 -383 3 -328 4 -341 25 -381 25 -48 83 -101 129 -120 28 -12 446 -14 2604 -14 1413 0 2570 -3 2570 -7 0 -4 -281 -289 -625 -633 -478 -479 -629 -636 -644 -670 -27 -60 -27 -150 0 -210 29 -64 454 -491 523 -525 64 -32 157 -34 219 -5 31 15 363 341 1218 1197 1160 1162 1176 1179 1208 1251 30 66 33 80 30 150 -5 97 -35 161 -123 263 -35 41 -563 572 -1172 1181 -783 781 -1122 1112 -1153 1128 -57 29 -133 34 -196 14z\" />\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const { icon, color } = this.props;\r\n    return (\r\n      <IconWrapper>{this.exitIcon(color ? color : '#8FBB')}</IconWrapper>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst primary = \"#8FBB\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: top;\r\n  height: 60px;\r\n  padding: 24px 6px 0px 6px;\r\n  width: 100%;\r\n  color: ${primary};\r\n  background-color: #282c34;\r\n  border-bottom: 1px solid ${primary};\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nexport const Bar = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  color: #8fbb;\r\n  height: 16px;\r\n  padding: 2px 10px;\r\n  width: 100%;\r\n  font-size: 10px;\r\n  cursor: grab;\r\n  -webkit-app-region: drag;\r\n`;\r\n\r\nexport const GroupButtons = styled.div`\r\n  display: flex;\r\n  width: 200px;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  display: block;\r\n  font-weight: 500;\r\n  padding: 4px 10px;\r\n  line-height: 26px;\r\n  font-size: 13px;\r\n  color: ${primary};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  border-radius: 4px 4px 0px 0px;\r\n  text-transform: uppercase;\r\n  background: none;\r\n  min-width: ${(props: NavButtonProps) => props.useMinWidth && \"200px\"};\r\n\r\n  &:disabled {\r\n    color: #000000;\r\n    background: #999999;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${primary};\r\n    color: #282c34;\r\n\r\n    /* SVG HOVER COLOR */\r\n    svg > g {\r\n      fill: #282c34;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface NavButtonProps {\r\n  useMinWidth?: boolean;\r\n}\r\n","import * as React from \"react\";\r\nimport IconSvg from \"../icons-svg/icons\";\r\nimport { HeaderWrapper, Bar, GroupButtons, NavButton } from \"./style\";\r\n\r\nexport interface IHeaderProps { }\r\n\r\nexport interface IHeaderState {\r\n  ipcRenderer?: any;\r\n  loading: boolean;\r\n}\r\n\r\nexport default class Header extends React.Component<\r\n  IHeaderProps,\r\n  IHeaderState\r\n  > {\r\n  private ipcRenderer?: any;\r\n\r\n  constructor(props: IHeaderProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ipcRenderer: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.ipcRenderer) {\r\n      this.initializeIpcRenderer();\r\n    }\r\n  }\r\n\r\n  initializeIpcRenderer = () => {\r\n    if (!window || !window.process || !window.require) {\r\n      throw new Error(`Unable to require renderer process`);\r\n    }\r\n    this.setState({\r\n      ipcRenderer: window.require(\"electron\").ipcRenderer,\r\n    }, () => {\r\n      this.state.ipcRenderer.on(\"reply-done-training\", (event: any, args: any) => {\r\n        console.log(\"HEADER\", args);\r\n        this.setState({ loading: false });\r\n      });\r\n    });\r\n  };\r\n\r\n  openTrainingMode = () => {\r\n    const { ipcRenderer } = this.state;\r\n\r\n    this.setState({ loading: true }, () => {\r\n      ipcRenderer.send(\"open-training\");\r\n    });\r\n  };\r\n\r\n  exitApp = () => {\r\n    const { ipcRenderer } = this.state;\r\n    ipcRenderer.send(\"close-program\", \"ping\");\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <HeaderWrapper>\r\n        <Bar>Machine Learning</Bar>\r\n        <GroupButtons>\r\n          <NavButton\r\n            onClick={this.openTrainingMode}\r\n            disabled={this.state.loading}\r\n            useMinWidth={true}\r\n          >\r\n            {!this.state.loading ? \"Executar Treinamento\" : \"Em treinamento...\"}\r\n          </NavButton>\r\n        </GroupButtons>\r\n        <NavButton onClick={() => this.exitApp()}>\r\n          Sair <IconSvg icon=\"exit\" color=\"#fff\" />{\" \"}\r\n        </NavButton>\r\n      </HeaderWrapper>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 40vh;\n  width: 100%;\n  background: rgba(50,50,50,0.4);\n  color:#8FBB;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0.5rem 1.5rem;\n\n  header {\n    font-size: 18px;\n    font-weight: 600;\n    text-align: center;\n    padding-bottom: 0.5rem;\n    margin-bottom:16px;\n    border-bottom:1px solid #8FBB;\n    \n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  margin-bottom: 0.825rem;\n`;\n\nexport const Subtitle = styled.h4`\n  text-transform: uppercase;\n  margin-bottom: 0.825rem;\n`;\n\nexport const List = styled.div``;\n\nexport const ListItem = styled.div`\n  padding: 0.1rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport * as S from \"./styles\";\n\ninterface Props {\n  data?: any;\n  loadingData: boolean;\n}\n\ninterface Characteristics {\n  name: string;\n  value: number;\n}\n\nconst Feature: React.FC<Props> = ({ data, loadingData }) => {\n  const [characteristics, setCharacteristics] = useState([]);\n  const [predictionResult, setPredictionResult] = useState({\n    accuracy: 0,\n    label: \"\",\n  });\n\n  useEffect(() => {\n    console.log(\"data\", data);\n    if (data) {\n      const parsedCharacteristics: any = Object.keys(data.features).map(\n        (el: any) => ({\n          name: el,\n          value: data.features[el],\n        })\n      );\n      if (parsedCharacteristics.length)\n        setCharacteristics(parsedCharacteristics);\n\n      setPredictionResult(data.prediction);\n    }\n  }, [data]);\n\n  return (\n    <S.Container>\n      {!loadingData ?\n        <S.Content>\n          <header>Características</header>\n          <S.Wrapper>\n\n            <div>\n              <S.Subtitle>Milhouse</S.Subtitle>\n              <S.List>\n                {characteristics.length > 0 &&\n                  characteristics\n                    .slice(0, 3)\n                    .map((item: Characteristics, index) => (\n                      <S.ListItem key={index}>\n                        {item.name} = {item.value.toPrecision(4)}\n                      </S.ListItem>\n                    ))}\n              </S.List>\n            </div>\n            <div>\n              <S.Subtitle>Apu</S.Subtitle>\n              <S.List>\n                {characteristics.length > 0 &&\n                  characteristics\n                    .slice(3, 6)\n                    .map((item: Characteristics, index) => (\n                      <S.ListItem key={index}>\n                        {item.name} = {item.value.toPrecision(4)}\n                      </S.ListItem>\n                    ))}\n              </S.List>\n            </div>\n          </S.Wrapper>\n          {predictionResult.accuracy &&\n            <S.Wrapper style={{ marginTop: \"35px\", paddingTop: '16px', borderTop: '1px solid #8FBB' }}>\n\n              <div>\n                <S.Subtitle>Predição</S.Subtitle>\n                <S.List>\n                  <S.ListItem>{predictionResult.accuracy.toFixed(4)}</S.ListItem>\n                  <S.ListItem>{predictionResult.accuracy != 100 ? (100 - predictionResult.accuracy).toFixed(4) : \"-\"}</S.ListItem>\n                </S.List>\n              </div>\n              <div>\n                <S.Subtitle>Personagem</S.Subtitle>\n                <S.List>\n                  <S.ListItem>{predictionResult.label}</S.ListItem>\n                  <S.ListItem>{predictionResult.label == \"Milhouse\" ? \"Apu\" : \"Milhouse\"}</S.ListItem>\n                </S.List>\n              </div>\n\n            </S.Wrapper>\n          }\n        </S.Content>\n        :\n        <p>Carregando...</p>\n      }\n    </S.Container>\n  );\n};\n\nexport default Feature;\n","import styled from 'styled-components';\r\n\r\nexport const ImageWrapper = styled.aside`\r\n  display: block;\r\n  width: 92%;\r\n  margin: 50px auto 0px auto;\r\n  color: #8FBB;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  border-radius: 8px;\r\n\r\n  .dropzone {\r\n    width: 100%;\r\n    padding: 20px;\r\n    border: 1px dashed #8FBB;\r\n    background-color:#333;\r\n  }\r\n`;\r\n\r\nexport const ThumbsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-top: 16;\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  display: inline-flex;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  max-width: 100%;\r\n  height: 100%;\r\n  margin-top: 8px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ThumbInner = styled.div`\r\n  display: flex;\r\n  min-width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ImgStyle = styled.img`\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 400px;\r\n  object-fit: contain;\r\n  margin: 0px auto;\r\n  text-align: center;\r\n  border: 1px solid #8FBB;\r\n  transition: all 0.2s ease-in-out;\r\n`;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {ImageWrapper, ThumbsContainer, Thumb, ThumbInner, ImgStyle} from './style';\r\n\r\nexport default function ImageSelector(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      acceptedFiles[0] && props.changeImage(acceptedFiles[0]);\r\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      })));\r\n    }\r\n  });\r\n  \r\n  const thumbs = files.map(file => (\r\n    <Thumb key={file.name}>\r\n      <ThumbInner>\r\n          <ImgStyle\r\n          src={file.preview}          \r\n        />\r\n      </ThumbInner>\r\n    </Thumb>\r\n  ));\r\n\r\n  useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file =>URL.revokeObjectURL(file.preview));    \r\n  }, [files]);\r\n\r\n  return (\r\n    <ImageWrapper>\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Arraste ou Selecione sua Imagem</p>       \r\n      </div>\r\n      <ThumbsContainer>\r\n        {thumbs}\r\n      </ThumbsContainer>\r\n    </ImageWrapper>\r\n  );\r\n}","import * as React from \"react\";\r\nimport Timer from 'react-compound-timer'\r\n\r\nexport interface ITimerProps {\r\n  done?: boolean\r\n}\r\n\r\nconst TimerLoading: React.FC<ITimerProps> = ({ done }) => {\r\n\r\n\r\n  return (\r\n    <div style={{ display: 'block', width: '100%', textAlign: 'center', color: '#999' }}>\r\n      <span>Tempo de treino - </span>\r\n      <Timer formatValue={(value) => `${(value < 10 ? `0${value}` : value)} `}>\r\n        {({ start, stop }: { start: any, stop: any }) => (\r\n          < React.Fragment  >\r\n            {done ? stop() : start()}\r\n            <Timer.Hours formatValue={value => `${value}:`} />\r\n            <Timer.Minutes formatValue={value => `${value}:`} />\r\n            <Timer.Seconds formatValue={value => `${value}`} />\r\n          </React.Fragment>\r\n        )\r\n        }\r\n      </Timer >\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default TimerLoading;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ColumnContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  vertical-align: middle;\r\n  padding: 5px 12px;\r\n  min-height: 85vmin;\r\n  max-height: 85vmin;\r\n  width: 50%;\r\n`;\r\n\r\nexport const LeftContent = styled(ColumnContent)`\r\n  border-right: 1px solid #7777;\r\n`;\r\n\r\nexport const RightContent = styled(ColumnContent)``;\r\n\r\nexport const Btn = styled.button`\r\n  display: block;\r\n  height: 40px;\r\n  line-height: 25px;\r\n  border-radius: 4px;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  width: 40%;\r\n  padding: 8px 12px;\r\n  /* margin-top:15px; */\r\n  color: #333;\r\n  background-color: #8FBB;\r\n  transition: all 0.2s ease-in-out;\r\n  cursor: pointer;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n\r\n  &:active {\r\n    color: #8FBB;\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nexport const DisableBtn = styled(Btn)`\r\n  background-color: #666;\r\n  cursor: default;\r\n\r\n  &:active {\r\n    background-color: #666;\r\n    color: #333;\r\n  }\r\n`;\r\n\r\nexport const MessageInfo = styled.p`\r\n  display: block;\r\n  width: 90%;\r\n  height:40px;\r\n  padding: 10px;\r\n  color: #8FBB;\r\n  border: 1px solid #333;\r\n  background-color: #333;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  max-width: 100%;\r\n`;\r\n\r\n\r\nexport const ImageMatrix = styled.img`\r\n  max-width: 90%;\r\n  margin-top:12px;\r\n`;","import * as React from \"react\";\r\nimport Feature from \"../feature\";\r\nimport ImageSelector from \"../image-selector/image-selector\";\r\nimport TimerLoading from \"../timer/timer\";\r\nimport {\r\n  Btn,\r\n  ContentWrapper,\r\n  DisableBtn,\r\n  ImageMatrix,\r\n  LeftContent,\r\n  MessageInfo,\r\n  RightContent,\r\n} from \"./style\";\r\n\r\nexport interface IContentProps { }\r\n\r\nexport interface IContentState {\r\n  ipcRenderer: any;\r\n  image?: { path?: string; preview?: any };\r\n  confusionMatrix?: string;\r\n  features?: [];\r\n  loading: boolean;\r\n  loadingClassify: boolean;\r\n  timer?: number;\r\n}\r\n\r\nexport default class Content extends React.Component<\r\n  IContentProps,\r\n  IContentState\r\n  > {\r\n  constructor(props: IContentProps) {\r\n    super(props);\r\n    this.state = {\r\n      ipcRenderer: null,\r\n      loading: false,\r\n      loadingClassify: false,\r\n      timer: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.ipcRenderer) {\r\n      this.initializeIpcRenderer();\r\n    }\r\n  }\r\n\r\n  initializeIpcRenderer = () => {\r\n    if (!window || !window.process || !window.require) {\r\n      throw new Error(`Unable to require renderer process`);\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        ipcRenderer: window.require(\"electron\").ipcRenderer,\r\n        loading: false,\r\n      },\r\n      () => {\r\n\r\n        //Treinamento iniciado\r\n        this.state.ipcRenderer.on(\"starting-training\", (event: any, args: any) => {\r\n          this.setState({\r\n            loading: true,\r\n            confusionMatrix: '',\r\n            timer: Date.now()\r\n          });\r\n\r\n        });\r\n\r\n        //Treinamento concluido\r\n        this.state.ipcRenderer.on(\"python-training\", (event: any, args: any) => {\r\n          this.state.ipcRenderer.send(\"done-training\", true);\r\n          if (this.isJson(args)) {\r\n            let jsonData = JSON.parse(args);\r\n\r\n            if (Object.keys(jsonData)[0] === \"uri\") {\r\n              console.log(\"matrix de confusão \" + jsonData.uri);\r\n              this.setState({\r\n                loading: false,\r\n                confusionMatrix: jsonData.uri,\r\n                timer: 0\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        //Classificacao concluida\r\n        this.state.ipcRenderer.on(\"python-events\", (event: any, args: any) => {\r\n          if (this.isJson(args)) {\r\n            let json = JSON.parse(args);\r\n            console.log(\"Obtained features\", json);\r\n\r\n            if (json.features && json.prediction)\r\n              this.setState({\r\n                loadingClassify: false,\r\n                features: json,\r\n              });\r\n          } else {\r\n            this.setState({ loadingClassify: false });\r\n          }\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleImage = (image: object) => {\r\n    console.log(\"SELECTED-IMAGE\", image);\r\n    this.setState({ image });\r\n  };\r\n\r\n  classifyAction = () => {\r\n    const { ipcRenderer, image } = this.state;\r\n\r\n    if (typeof image == \"object\") {\r\n      this.setState({ loadingClassify: true }, () => {\r\n        ipcRenderer.send(\"classify-image\", { data: image.path });\r\n      });\r\n    }\r\n  };\r\n\r\n  isJson = (str: string) => {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      image,\r\n      loading,\r\n      loadingClassify,\r\n      confusionMatrix,\r\n      features,\r\n      timer\r\n    } = this.state;\r\n    return (\r\n      <ContentWrapper>\r\n        <LeftContent>\r\n          <ImageSelector changeImage={this.handleImage} />\r\n          {image ? (\r\n            !loadingClassify ? (\r\n              <Btn onClick={() => this.classifyAction()}>Classificar</Btn>\r\n            ) : (\r\n                <DisableBtn>Processando Imagem...</DisableBtn>\r\n              )\r\n          ) : (\r\n              <DisableBtn>Selecione uma imagem</DisableBtn>\r\n            )}\r\n        </LeftContent>\r\n        <RightContent>\r\n          <Feature loadingData={loadingClassify} data={features} />\r\n          {confusionMatrix ? (\r\n            <ImageMatrix src={confusionMatrix} />\r\n          ) : loading ? (\r\n            <MessageInfo>Realizando treinamento...</MessageInfo>\r\n          ) : (\r\n                <MessageInfo>Aguardando Treinamento</MessageInfo>\r\n              )}\r\n          <TimerLoading done={!loading} />\r\n        </RightContent>\r\n      </ContentWrapper>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Header from './components/header/header';\nimport Content from './components/content/content';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />      \n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}